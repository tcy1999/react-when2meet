{"version":3,"sources":["Secrets.ts","DataModel.ts","HourCell.tsx","TimeSelector.tsx","HourCellDisplay.tsx","TimeDisplayer.tsx","EventDisplay.tsx","Home.tsx","App.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","db","getFirestore","DataModel","groupId","rows","cols","map","mapListener","users","this","Map","row","col","set","Set","a","docRef","doc","getDoc","docSnap","exists","data","newUser","add","setDoc","Array","from","notifyListener","key","currentSet","get","updateDoc","delete","id","callbackFunction","listener","callback","push","listenerId","idx","findIndex","elem","splice","dataModel","undefined","getDataModel","HourCell","user","select","useState","selected","setSelected","className","classNames","onClick","deleteItem","addItem","TimeSelector","countMap","scope","i","split","includes","has","START_COLOR","DIFF_COLOR","getColor","count","userNum","percent","Math","round","HourCellDisplay","date","available","setAvailable","setUsers","size","color","setColor","useEffect","Date","now","addListener","removeListener","style","backgroundColor","onMouseEnter","document","getElementById","render","values","filter","x","TimeDisplayer","startDate","timeZone","setUserNum","border","maxWidth","range","width","onMouseLeave","moment","tz","format","start","end","delta","length","v","k","EventDisplay","eventName","numDays","startTime","endTime","currentUser","setCurrentUser","visible","setVisible","inputEl","useRef","useParams","_","reduce","result","hour","minute","fetchData","fetchUsers","htmlFor","type","ref","current","value","updateUsers","Home","DEFAULT_INPUT","setEventName","setTimeZone","setStartDate","setNumDays","setStartTime","setEndTime","handleClick","useCallback","onChange","ev","target","names","item","min","max","parseInt","to","App","eventParams","setEventParams","v4","path","element","params","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.56e03216.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyB7j0n2NnlUhx2CHhTV7622oTn9o2ZRpp8\",\r\n  authDomain: \"edu-umich-cyuntao-579.firebaseapp.com\",\r\n  projectId: \"edu-umich-cyuntao-579\",\r\n  storageBucket: \"edu-umich-cyuntao-579.appspot.com\",\r\n  messagingSenderId: \"872388207337\",\r\n  appId: \"1:872388207337:web:92c609be55b13530278678\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import { initializeApp } from '@firebase/app';\r\nimport { \r\n  getFirestore, doc, getDoc, setDoc, updateDoc\r\n} from \"@firebase/firestore\";\r\nimport firebaseConfig from './Secrets';\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\ntype listenerType = {\r\n  id: string,\r\n  callback: () => void\r\n}\r\n  \r\nclass DataModel {\r\n  groupId: string;\r\n  map: Map<string, Set<string>>;\r\n  mapListener: Array<listenerType>;\r\n  users: Set<string>;\r\n\r\n  constructor(groupId:string, rows:Array<string>, cols:Array<string>) {\r\n    this.groupId = groupId;\r\n    this.map = new Map<string, Set<string>>();\r\n    for (const row of rows) {\r\n      for (const col of cols) {\r\n        this.map.set(`${col}-${row}`, new Set<string>());\r\n      }\r\n    } \r\n    this.mapListener = [];\r\n    this.users = new Set<string>();\r\n  }\r\n\r\n  async fetchUsers() {\r\n    const docRef = doc(db, \"Users\", this.groupId);\r\n    const docSnap  = await getDoc(docRef);\r\n    if (docSnap.exists()){ \r\n      this.users = new Set<string>(docSnap.data().users);\r\n    }\r\n  }\r\n\r\n  updateUsers(newUser: string) {\r\n    this.users.add(newUser);\r\n    const docRef = doc(db, \"Users\", this.groupId);\r\n    setDoc(docRef, {\"users\": Array.from(this.users)});\r\n    this.notifyListener();\r\n  }\r\n\r\n  async fetchData() {\r\n    const docRef = doc(db, \"Events\", this.groupId);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()){ \r\n      const data = docSnap.data();\r\n      for (const key in data) {\r\n        this.map.set(key, new Set<string>(data[key]));\r\n      }\r\n      this.notifyListener();\r\n    }\r\n  }\r\n\r\n  async addItem(key:string, newUser:string) {\r\n    let currentSet = this.map.get(key);\r\n    currentSet!.add(newUser);\r\n    this.map.set(key, currentSet!);\r\n    this.notifyListener();\r\n\r\n    const docRef = doc(db, `Events`, `${this.groupId}`);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      updateDoc(docRef, {[key]: Array.from(currentSet!)}); \r\n    } else {\r\n      setDoc(docRef, {[key]: Array.from(currentSet!)})\r\n    }\r\n  }\r\n\r\n  deleteItem(key:string, newUser:string) {\r\n    let currentSet = this.map.get(key);\r\n    currentSet!.delete(newUser);\r\n    this.map.set(key, currentSet!);\r\n    this.notifyListener();\r\n\r\n    const docRef = doc(db, `Events`, `${this.groupId}`);\r\n    updateDoc(docRef, {[key]: Array.from(currentSet!)});\r\n  }\r\n  \r\n  addListener(id:string, callbackFunction:() => void) {\r\n    const listener = {\r\n      id: id,\r\n      callback: callbackFunction\r\n    }\r\n    this.mapListener.push(listener);\r\n    callbackFunction();\r\n  }\r\n\r\n  removeListener(listenerId:string) {\r\n    let idx = this.mapListener.findIndex((elem:listenerType) => elem.id === listenerId);\r\n    this.mapListener.splice(idx, 1);\r\n  }\r\n\r\n  notifyListener() {\r\n    for (const tl of this.mapListener) {\r\n      tl.callback();\r\n    }\r\n  }\r\n}\r\n\r\nlet dataModel:DataModel | undefined = undefined;\r\n\r\nexport function getDataModel(groupId?:string, rows?:Array<string>, cols?:Array<string>) {\r\n  if (!dataModel) {\r\n    dataModel = new DataModel(groupId!, rows!, cols!);\r\n  }\r\n  return dataModel;\r\n}\r\n\r\nexport function resetDataModel() {\r\n  dataModel = undefined;\r\n}\r\n","import { useState } from 'react';\r\nimport classNames from \"classnames\";\r\nimport { getDataModel } from './DataModel';\r\n\r\ntype HourCellProps =  {\r\n  row: string,\r\n  col: string,\r\n  user: string,\r\n  select: boolean,\r\n}\r\n\r\nconst HourCell: React.FC<HourCellProps> = function ({row, col, user, select}){\r\n  const [selected, setSelected] = useState(select);\r\n  const dataModel = getDataModel();\r\n  \r\n  return (\r\n    <div className={classNames(selected ? 'selected' : 'unselected', 'cell')} \r\n    onClick={() => {\r\n      setSelected(!selected);\r\n      if (!selected) {\r\n        dataModel.addItem(`${col}-${row}`, user);\r\n      } else {\r\n        dataModel.deleteItem(`${col}-${row}`, user);\r\n      }\r\n    }}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HourCell;","import HourCell from './HourCell';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport { getDataModel } from './DataModel';\r\n\r\ntype TimeSelectorProps = {\r\n  user: string,\r\n  rows: Array<string>,\r\n  cols: Array<string>\r\n}\r\n\r\n// TODO (likely to be next steps): drag,\r\n// consider different timezone, check input, ui (like rewrite responsible table), restructure code\r\n// get performance, memo, accessibility, option of choossing dates (weekday), \r\n// more functions like sharing/priting\r\n\r\nconst TimeSelector: React.FC<TimeSelectorProps> = function ({ user, rows, cols}) {\r\n  const dataModel = getDataModel();\r\n  const countMap = new Map<string, Set<string>>(dataModel.map);\r\n\r\n  return (\r\n    <div className='time-selector'>\r\n      <div className='d-inline-flex'>\r\n        Unavailable\r\n        <div className=\"cellDisplay unselected marginleft\"></div>\r\n        <div className=\"cellDisplay selected marginright\"></div>\r\n        Available\r\n      </div>\r\n      <div className=\"row\">Click calendar cells to toggle</div>\r\n      <Table>\r\n        <Thead>\r\n          <Tr>\r\n            <Th scope=\"col\"></Th>\r\n            {cols.map(\r\n              (i) => <Th key={i} scope=\"col\">{i}</Th>)\r\n            }\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {\r\n            rows.map((row) =>                 \r\n            <Tr key={row}>\r\n              <Th scope=\"row\">{row.split(':')[1].includes(\"00\") && row}</Th>\r\n              {\r\n                cols.map(\r\n                (col) => <Td key={`${col}-${row}`}><HourCell row={row} col={col} user={user} select={\r\n                  countMap.get(`${col}-${row}`)!.has(user)\r\n                }/></Td>)\r\n              }\r\n            </Tr>)\r\n          }  \r\n        </Tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeSelector;","import { render } from 'react-dom';\r\nimport { getDataModel } from './DataModel';\r\nimport { useEffect, useState } from 'react';\r\n\r\ntype HourCellDisplayProps =  {\r\n  date: string,\r\n  row: string,\r\n  col: string\r\n}\r\n\r\nconst START_COLOR ={ r: 255, g: 255, b: 255 }\r\n\r\nconst END_COLOR = { r: 17, g: 103, b: 177 }\r\n\r\nconst DIFF_COLOR = {\r\n  r: END_COLOR.r - START_COLOR.r,\r\n  g: END_COLOR.g - START_COLOR.g,\r\n  b: END_COLOR.b - START_COLOR.b,\r\n}\r\n\r\nexport const getColor = function(count: number, userNum:number) {\r\n  const percent = count / userNum;\r\n  return `rgb(${Math.round(START_COLOR.r + percent*DIFF_COLOR.r)}, ${Math.round(START_COLOR.g + \r\n    percent*DIFF_COLOR.g)}, ${Math.round(START_COLOR.b + percent*DIFF_COLOR.b)})`;\r\n}\r\n\r\nconst HourCellDisplay: React.FC<HourCellDisplayProps> = function ({date, row, col}){\r\n  const dataModel = getDataModel();\r\n  const [available, setAvailable] = useState<Set<string>>(dataModel.map.get(`${col}-${row}`)!);\r\n  const [users, setUsers] = useState<Set<string>>(dataModel.users);\r\n  const [color, setColor] = useState<string>(getColor(available!.size, users.size));\r\n  \r\n  useEffect(() => {\r\n    const listenerId = `${Date.now()}-${col}-${row}`;\r\n    dataModel.addListener(listenerId, () => {\r\n      setAvailable(dataModel.map.get(`${col}-${row}`)!);\r\n      setUsers(dataModel.users);\r\n      setColor(getColor(dataModel.map.get(`${col}-${row}`)!.size, dataModel.users.size));\r\n    });\r\n\r\n    return () => {\r\n      dataModel.removeListener(listenerId);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cellDisplay\" style={{backgroundColor:color}}\r\n    onMouseEnter={() => {\r\n      if(document.getElementById('placeholder'))\r\n        render(<><h2>{date}</h2>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-md-4'>\r\n            Available\r\n            {Array.from(available!.values()).map(i => <div key={i}>{i}</div>)}\r\n          </div>\r\n          <div className='col-md-4'>\r\n            Unavailable\r\n            {Array.from(users.values()).filter(x => !available!.has(x)).map(i => <div key={i}>\r\n              {i}</div>)}\r\n          </div>\r\n        </div>\r\n        </>, document.getElementById('placeholder'));\r\n    }}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HourCellDisplay;","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport moment from 'moment-timezone';\nimport { range } from './EventDisplay';\nimport HourCellDisplay, { getColor } from './HourCellDisplay';\nimport { getDataModel } from './DataModel';\n\ntype TimeDisplayerProps = {\n  startDate: string,\n  timeZone: string,\n  rows: Array<string>,\n  cols: Array<string>,\n  callback: Dispatch<SetStateAction<boolean>>,\n}\n\nconst TimeDisplayer: React.FC<TimeDisplayerProps> = function ({ startDate, timeZone, rows, cols, \n  callback }) {\n  const dataModel = getDataModel();\n  const [userNum, setUserNum] = useState<number>(dataModel.users.size);\n  \n  useEffect(() => {\n    const listenerId = `${Date.now()}-TimeDisplayer`;\n    dataModel.addListener(listenerId, () => {\n      setUserNum(dataModel.users.size);\n    });\n\n    return () => {\n      dataModel.removeListener(listenerId);\n    }\n  }, []);\n  \n  return (\n    <div className='time-selector'>\n      {userNum > 0 && <div className='d-inline-flex w-100 justify-content-center'>\n        {`0/${userNum} Available`}\n          <div className=\"w-100 d-inline-flex marginleft marginright\" style={{border: \"1px solid #ccc\", \n          maxWidth: 100}}>\n            {range(0, userNum + 1, 1).map(i => \n              <div key={i}\n              style={{width: `${100/userNum}%`, backgroundColor:getColor(i, userNum)}}>\n              </div>\n            )}\n          </div>\n       {`${userNum}/${userNum} Available`}\n      </div>}\n      <div className=\"row\">Mouseover the calendar to see who is available</div>\n      <Table className='mytable'>\n        <Thead>\n          <Tr>\n            <Th scope=\"col\"></Th>\n              {cols.map((i) => <Th key={i} scope=\"col\">{i}</Th>)}\n          </Tr>\n        </Thead>\n        <Tbody>\n          {\n            rows.map((row) =>                 \n            <Tr key={row}>\n              <Th scope=\"row\">{row.split(':')[1].includes(\"00\") && row}</Th>\n              {\n                cols.map(\n                (col, i) => <Td key={`${col}-${row}`} onMouseEnter={() => {\n                  callback(false)}}  onMouseLeave={() => {callback(true)}}>\n                <HourCellDisplay date={moment(`${startDate} ${row}`, \n                \"YYYY-MM-DD h:mm A\").add(i, \"days\").tz(timeZone).format('llll z')} row={row} \n                col={col} /></Td>)\n              }\n            </Tr>)\n          }  \n        </Tbody>\n      </Table>\n  </div>\n  )\n}\n\nexport default TimeDisplayer;\n","import { useState, useRef, useEffect } from \"react\";\r\nimport moment from 'moment-timezone';\r\nimport TimeSelector from \"./TimeSelector\";\r\nimport TimeDisplayer from \"./TimeDisplayer\";\r\nimport { getDataModel, resetDataModel } from \"./DataModel\";\r\nimport { useParams } from \"react-router\";\r\n\r\nexport type EventProps = {\r\n  eventName: string,\r\n  timeZone: string,\r\n  startDate: string,\r\n  numDays: number,\r\n  startTime: number,\r\n  endTime: number\r\n}\r\n\r\nexport const range = (start:number, end:number, delta:number) => {\r\n  return Array.from(\r\n    {length: (end - start) / delta}, (v, k) => (k * delta) + start\r\n  )\r\n};\r\n\r\nconst generateHours = (start:number, end:number) => {\r\n  return Array.from({length: end-start}, (_, i) => i + start).reduce((result:string[], hour:number) => {\r\n    result.push(moment({hour}).format('h:mm A'));\r\n    result.push(moment({hour, minute: 30}).format('h:mm A'));\r\n    return result;\r\n  }, []);\r\n}\r\n\r\nconst EventDisplay: React.FC<EventProps> = function ({ eventName, startDate, numDays, timeZone, \r\n  startTime, endTime}) {\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const [visible, setVisible]= useState<boolean>(true);\r\n  const inputEl = useRef(null);\r\n  let { groupId } = useParams();\r\n\r\n  const cols = range(0, numDays, 1).map((i) => \r\n  moment(startDate).tz(timeZone).add(i, 'days').format('MMM DD'));\r\n  const rows = generateHours(startTime, endTime);\r\n\r\n  const dataModel = getDataModel(groupId!, rows, cols);\r\n\r\n  useEffect(() => {\r\n    dataModel.fetchData();\r\n    dataModel.fetchUsers();\r\n\r\n    return () => {\r\n      resetDataModel();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{eventName}</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-md\">\r\n          {currentUser ? \r\n          <div>\r\n            <div id='available' className={visible?'notdisplay':'display'}>\r\n              <div id=\"placeholder\"></div>\r\n            </div>\r\n            <div id=\"timeselector\" className={visible?'display':'notdisplay'}>\r\n              <h2>{currentUser}'s Availability\r\n                <button className=\"btn btn-outline-secondary marginleft\" onClick={() => {\r\n                  setCurrentUser('');\r\n                }}>Sign out</button>\r\n              </h2>\r\n              <TimeSelector user={currentUser} rows={rows} cols={cols} />\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className=\"col-md\">\r\n            <div className=\"row\">\r\n              <label className=\"col-md-3\" htmlFor=\"user\">Your name:</label>\r\n              <div className=\"col-md-5\">\r\n                <input className=\"form-control\" type=\"text\" id=\"user\" \r\n                  ref={inputEl}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"row margintop\">\r\n              <div className=\"offset-md-3 col-md-5\">\r\n                <button className=\"btn btn-outline-secondary w-100\" onClick={() => {\r\n                setCurrentUser((inputEl as any).current.value);\r\n                dataModel.updateUsers((inputEl as any).current.value);\r\n                }}>Sign in</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          }\r\n        </div>\r\n        <div className=\"col-md\">\r\n          <h2>Group's Availability</h2>\r\n          <TimeDisplayer startDate={startDate} timeZone={timeZone} rows={rows} cols={cols} \r\n          callback={setVisible}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventDisplay;\r\n","import { useState, useCallback } from \"react\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport moment from 'moment-timezone';\r\nimport { DEFAULT_INPUT } from \"./App\";\r\nimport { EventProps } from \"./EventDisplay\";\r\n\r\ntype AppRouterProps =  {\r\n  groupId: string,\r\n  callback: (params:EventProps) => void,\r\n}\r\n\r\nconst Home:React.FC<AppRouterProps> = function({groupId, callback}) {\r\n  const [eventName, setEventName] = useState(DEFAULT_INPUT.eventName);\r\n  const [timeZone, setTimeZone] = useState(DEFAULT_INPUT.timeZone);\r\n  const [startDate, setStartDate] = useState(DEFAULT_INPUT.startDate);\r\n  const [numDays, setNumDays] = useState(DEFAULT_INPUT.numDays);\r\n  const [startTime, setStartTime] = useState(DEFAULT_INPUT.startTime);\r\n  const [endTime, setEndTime] = useState(DEFAULT_INPUT.endTime);\r\n\r\n  const handleClick = useCallback((eventName, timeZone, startDate, numDays, startTime, endTime) => {\r\n    callback({eventName:eventName, timeZone:timeZone, startDate:startDate, numDays:numDays, \r\n      startTime:startTime, endTime:endTime});\r\n  }, [callback]);\r\n\r\n  return (\r\n      <div id=\"Home\">\r\n        <form className=\"form-inline row\">\r\n          <div className=\"col-md-2\">\r\n            <label htmlFor=\"event-name\">Event name:</label>\r\n            <input className=\"form-control\" type=\"text\" id=\"event-name\" \r\n            value={eventName} onChange={(ev: React.ChangeEvent<HTMLInputElement>) => \r\n            setEventName(ev.target.value)}></input>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <label htmlFor=\"timezone\">Time zone:</label>\r\n            <select className=\"form-control\" id=\"timezone\" value={timeZone}\r\n            onChange={(ev) => setTimeZone(ev.target.value)}>\r\n              {moment.tz.names().map((item) => \r\n                <option key={item} value={item}>{item}</option>)\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <label htmlFor=\"startday\">Start date:</label>\r\n            <input className=\"form-control\" type=\"date\" id=\"startday\" \r\n            value={startDate}\r\n            onChange={(ev: React.ChangeEvent<HTMLInputElement>) => \r\n            setStartDate(ev.target.value)}></input>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <label htmlFor=\"numday\">Days:</label>\r\n            <input className=\"form-control\" min=\"1\" max=\"7\" type=\"number\" id=\"numday\" \r\n            value={numDays} onChange={(ev: React.ChangeEvent<HTMLInputElement>) => \r\n            setNumDays(parseInt(ev.target.value))}></input>\r\n          </div> \r\n          <div className=\"col-md-2\">\r\n            <label htmlFor=\"starttime\">Start time:</label>\r\n            <input className=\"form-control\" type=\"number\" id=\"starttime\" min=\"0\" max=\"23\"\r\n            value={startTime} onChange={(ev: React.ChangeEvent<HTMLInputElement>) => \r\n            setStartTime(parseInt(ev.target.value))}></input>\r\n          </div>  \r\n          <div className=\"col-md-2\">\r\n            <label htmlFor=\"endtime\">End time:</label>\r\n            <input className=\"form-control\" type=\"number\" id=\"endtime\" min=\"0\" max=\"24\"\r\n            value={endTime} onChange={(ev: React.ChangeEvent<HTMLInputElement>) => \r\n            setEndTime(parseInt(ev.target.value))}></input>\r\n          </div>  \r\n          <div className=\"d-grid linkcontainer\">\r\n            <Link to={`/react-when2meet/event/${groupId}`} className=\"btn btn-primary btn-block\" onClick={() => \r\n            handleClick(eventName, timeZone, startDate, numDays, startTime, endTime)}>Create event</Link>\r\n          </div>\r\n        </form>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport EventDisplay from \"./EventDisplay\";\nimport Home from \"./Home\";\nimport moment from \"moment\";\nimport { EventProps } from \"./EventDisplay\";\nimport { v4 } from 'uuid';\n\nexport const DEFAULT_INPUT = {\n  eventName: 'New Event',\n  timeZone: 'America/New_York',\n  startDate: moment(new Date()).format('YYYY-MM-DD'),\n  numDays: 7,\n  startTime: 8,\n  endTime: 20\n}\n\nfunction App () {\n  const [eventParams, setEventParams] = useState(DEFAULT_INPUT);\n  const groupId = v4();\n  let { eventName, timeZone, startDate, numDays, startTime, endTime } = eventParams;\n\n  return (\n    <Router>\n        <Routes>\n          <Route path=\"/react-when2meet\" element={<Home groupId={groupId} \n          callback={(params:EventProps) => setEventParams(params)}/>}/>\n          <Route path=\"/react-when2meet/event/:groupId\" element={<EventDisplay eventName={eventName} \n          timeZone={timeZone} startDate={startDate} numDays={numDays} startTime={startTime} endTime={endTime}/>}/>\n        </Routes>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}